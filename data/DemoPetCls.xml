<?xml version="1.0" encoding="UTF-8"?>
<Export generator="IRIS" version="26" zv="IRIS for Windows (x86-64) 2018.1.1 (Build 643U)" ts="2018-11-30 08:08:15">
<Class name="Demo.Pet">
<Description>PURPOSE: This class stores information about pets. To populate 100 sample pets, you can run: do ##class(Demo.Pet).Populate(100)</Description>
<Super>%Persistent,%Populate</Super>
<TimeChanged>64982,29202.915969</TimeChanged>
<TimeCreated>64971,33611.200622</TimeCreated>

<Property name="Name">
<Type>%String</Type>
<Parameter name="POPSPEC" value="##class(%PopulateUtils).FirstName()"/>
</Property>

<Property name="Type">
<Type>%String</Type>
<Parameter name="VALUELIST" value=",dog,bird,cat,rat,mouse,rabbit"/>
</Property>

<Property name="Color">
<Type>%String</Type>
</Property>

<Property name="PetShop">
<Type>Demo.PetShop</Type>
</Property>

<Index name="ColorIdx">
<Type>bitmap</Type>
<Properties>Color</Properties>
</Index>

<Index name="TypeIdx">
<Type>bitmap</Type>
<Properties>Type</Properties>
</Index>

<Method name="DisplayAllBirdsByLocation">
<Description>This method displays information for all yellow birds in a particular city and state.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>city:%String,state:%String</FormalSpec>
<Implementation><![CDATA[
	// Use cursor-based embedded SQL to retrieve data
	// -> is an implicit join and follows object references to make left joins easier
	&sql(DECLARE c1 CURSOR FOR SELECT name, petshop->owner, petshop->phone 
	INTO :name, :owner, :phone
	FROM demo.pet 
	WHERE type = 'bird' and color = 'Yellow' and petshop->location->city = :city and 
	petshop->location->state = :state)
	
	&sql(OPEN c1)
	
	// Fetch each row and display it using custom formatting. ?15 allots 15 characters padded with the appropriate number of spaces. ! adds a new line.
	write "Name", ?15, "Owner", ?50, "Phone", !
	&sql(FETCH c1)
	while (SQLCODE = 0) {
		write name, ?15, owner, ?50, phone, !
		&sql(FETCH c1)
	}
	
	&sql(CLOSE c1)
]]></Implementation>
</Method>

</Class>
</Export>
