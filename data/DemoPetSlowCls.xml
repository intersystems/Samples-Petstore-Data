<?xml version="1.0" encoding="UTF-8"?>
<Export generator="IRIS" version="26" zv="IRIS for Windows (x86-64) 2018.1.1 (Build 643U)" ts="2018-11-30 15:49:05">
<Class name="Demo.PetSlow">
<Description>PURPOSE: This class is almost exactly the same as Demo.Pet except it does not have bitmap indices.</Description>
<Description>To copy data from Demo.Pet, run: do ##class(Demo.PetSlow).CopyData()</Description>
<Description>Queries such as the one stated in the SQL QuickStart are usually slower when run against this class compared to Demo.Pet due to no bitmap indices.</Description>
<Super>%Persistent</Super>
<TimeChanged>64982,56789.129736</TimeChanged>
<TimeCreated>64980,60845.619356</TimeCreated>

<Property name="Name">
<Type>%String</Type>
</Property>

<Property name="Type">
<Type>%String</Type>
<Parameter name="VALUELIST" value=",dog,bird,cat,rat,mouse,rabbit"/>
</Property>

<Property name="Color">
<Type>%String</Type>
</Property>

<Property name="PetShop">
<Type>Demo.PetShop</Type>
</Property>

<Method name="CopyData">
<Description>This method copies data from Demo.Pet so both classes have the exact same data to show that bitmap indices improve performance</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	        set status = $$$OK
                
                //Deleting data from previous run to avoid duplication of data
                do ##class(Demo.PetSlow).%DeleteExtent()
                
                try {
                     	write "Copying pet data now without bitmap indices...", !
                     	set tStatement = ##class(%SQL.Statement).%New()
                    	set status = tStatement.%Prepare("SELECT id FROM demo.pet")
                     	if status'=1 {
                               write "%Prepare failed:" 
                               do $System.Status.DisplayError(qStatus) 
                               quit
                    	}
                     	set rset = tStatement.%Execute()
	
			//For each pet in Demo.Pet, copy data to Demo.PetSlow
                     	while rset.%Next() {
                     		set pet = ##class(Demo.Pet).%OpenId(rset.id)
                     		set newPet = ##class(Demo.PetSlow).%New()
               	      		set newPet.Name = pet.Name
                      		set newPet.Type = pet.Type
                  		set newPet.Color = pet.Color
                   		set newPet.PetShop = pet.PetShop
                      		set status = newPet.%Save() 
                	}
                                
                	write "All pets are now copied over."
                }
                catch e {
                       	write "Error occurred: " _ status
                     	quit
                }

]]></Implementation>
</Method>
</Class>
</Export>
