<?xml version="1.0" encoding="UTF-8"?>
<Export generator="IRIS" version="26" zv="IRIS for Windows (x86-64) 2018.1.1 (Build 643U)" ts="2018-11-30 08:08:15">
<Class name="Demo.Pet">
<Super>%Persistent,%Populate</Super>
<TimeChanged>64982,29202.915969</TimeChanged>
<TimeCreated>64971,33611.200622</TimeCreated>

<Property name="Name">
<Type>%String</Type>
<Parameter name="POPSPEC" value="##class(%PopulateUtils).FirstName()"/>
</Property>

<Property name="Type">
<Type>%String</Type>
<Parameter name="VALUELIST" value=",dog,bird,cat,rat,mouse,rabbit"/>
</Property>

<Property name="Color">
<Type>%String</Type>
</Property>

<Property name="PetShop">
<Type>Demo.PetShop</Type>
</Property>

<Index name="ColorIdx">
<Type>bitmap</Type>
<Properties>Color</Properties>
</Index>

<Index name="TypeIdx">
<Type>bitmap</Type>
<Properties>Type</Properties>
</Index>

<Method name="AddPetShopToAll">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set status = $$$OK
	&sql(select count(*) into :countPet from demo.pet)
	&sql(select count(*) into :countPetShops from demo.petshop)
	write "Please wait: Assigning petshops to all pets...", !
	
	try {
		for i=1:1:countPet
		{
			set pet = ##class(Demo.Pet).%OpenId(i)
			set pet.PetShop = ##class(Demo.PetShop).%OpenId($random(countPetShops+1))
			set status = pet.%Save()
		}
		write "All pets are now assigned to petshops."
	}
	catch e {
		write "Error!"_status
		quit
	}
]]></Implementation>
</Method>

<Method name="DisplayAllBirdsByLocation">
<ClassMethod>1</ClassMethod>
<FormalSpec>city:%String,state:%String</FormalSpec>
<Implementation><![CDATA[
	// Use cursor-based embedded SQL to retrieve data
	&sql(DECLARE c1 CURSOR FOR SELECT name, petshop->owner, petshop->phone 
	INTO :name, :owner, :phone
	FROM demo.pet 
	WHERE type = 'bird' and color = 'Yellow' and petshop->location->city = :city and 
	petshop->location->state = :state)
	
	&sql(OPEN c1)
	
	// Fetch each row and display it using custom formatting. ?15 allots 15 characters padded with the appropriate number of spaces. ! adds a new line.
	write "Name", ?15, "Owner", ?20, "Phone", !
	&sql(FETCH c1)
	while (SQLCODE = 0) {
		write name, ?15, owner, ?20, phone, !
		&sql(FETCH c1)
	}
	
	&sql(CLOSE c1)
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^Demo.PetD</DataLocation>
<DefaultData>PetDefaultData</DefaultData>
<IdLocation>^Demo.PetD</IdLocation>
<IndexLocation>^Demo.PetI</IndexLocation>
<StreamLocation>^Demo.PetS</StreamLocation>
<ExtentSize>2000000</ExtentSize>
<Data name="PetDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Name</Value>
</Value>
<Value name="3">
<Value>Type</Value>
</Value>
<Value name="4">
<Value>Breed</Value>
</Value>
<Value name="5">
<Value>Color</Value>
</Value>
<Value name="6">
<Value>PetShop</Value>
</Value>
</Data>
<Property name="%%CLASSNAME">
<Selectivity>0.0016%</Selectivity>
<OutlierSelectivity>.999835:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>6.43</AverageFieldSize>
</Property>
<Property name="Color">
<Selectivity>20.0000%</Selectivity>
<AverageFieldSize>4.6</AverageFieldSize>
</Property>
<Property name="Name">
<Selectivity>0.6757%</Selectivity>
<AverageFieldSize>5.45</AverageFieldSize>
</Property>
<Property name="PetShop">
<Selectivity>0.8197%</Selectivity>
<AverageFieldSize>2.49</AverageFieldSize>
</Property>
<Property name="Type">
<Selectivity>16.6666%</Selectivity>
<AverageFieldSize>4</AverageFieldSize>
</Property>
<SQLMap name="$Pet">
<BlockCount>-4</BlockCount>
</SQLMap>
<SQLMap name="ColorIdx">
<BlockCount>-340</BlockCount>
</SQLMap>
<SQLMap name="IDKEY">
<BlockCount>-32324</BlockCount>
</SQLMap>
</Storage>
</Class>
</Export>
